---
name: Thierry de Pauw
titles:
  - Agile Technical Coach
  - Continuous Delivery Consultant
  - Lean and XP Software Engineer
email: thierry@thinkinglabs.io
phone: +32 499 133 454
website: thinkinglabs.io
speakerdeck: tdpauw
linkedin: tdpauw
twitter: tdpauw
github: tdpauw
summary: |
  Agile Technical Coach helping teams in adopting the necessary technical practices to deliver higher quality products at a higher speed and at lower costs.

  I like to help teams in creating meaningful software, with a keen eye for code quality and software delivery process - from customer interaction to continuous delivery. Instead of balancing quality & delivery, I believe and practice that better quality is actually a way to more and better deliveries. High speed, high quality.

  Continuous Integration and Continuous Delivery consultant.

  Software craftsman.

  Occasional speaker at conferences.

  Always searching for the simple solution that fits in my head.

  It is a deliberate choice to be a generalist, because more experiences results in more creativity.
experiences:
  - company: SWIFT, La Hulpe, Belgium
    period: Jan 2017 - Present
    title: Continuous Delivery Consultant
    description: ""
  - company: BNP Paribas Fortis
    period: Mar 2016 - Present
    title: DevOps awareness Trainer
    description: |
      DevOps Awareness Training.

      Giving a half-day introductory training to the DevOps culture for every new Agile team as part of a bigger introductory training to Agile methodologies.
  - company: ACA-IT Solutions, Gent, Belgium
    period: Jul 2016 - Nov 2016
    title: Agile Technical Coach, Softweare Engineer
    description: |
      Improved the software delivery flow and reduce the lead time of the software delivery process by:

      * improving the Kanban system by introducing WIP limits
      * reducing story sizing and improving estimates
      * enforce the pull mechanism of Kanban
      * improving the overall software design towards an Hexagonal architecture which improves the decoupling of the software code
      * improving the testing strategy

      All of this reduced the cycle time of feature branches from several weeks to max. 4 days.
